Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v1.38/dat/en_msgs.txt -cs \
  -h+dist/default/production/CAN_1.production.sym \
  --cmf=dist/default/production/CAN_1.production.cmf -z -Q18F2480 \
  -o/tmp/xcIxgAMih -Mdist/default/production/CAN_1.production.map -E1 \
  -ver=XC8 -ASTACK=099h-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xc3oZZwEz.obj dist/default/production/CAN_1.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xc3oZZwEz.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/CAN_1.production.obj
                intcode                               8        8        E        4       0
                temp                                 4A       4A        1        1       1
                smallconst                          300      300       B6      180       0
                text30                              DE4      DE4        2      1DB       0
                text29                              DBA      DBA       10      1DB       0
                text28                              AD4      AD4       6A      1DB       0
                text27                              D66      D66       1E      1DB       0
                text26                              DD8      DD8        6      1DB       0
                intcode_body                        780      780       C2      1DB       0
                text24                              BE4      BE4       36      1DB       0
                text23                              D48      D48       1E      1DB       0
                text22                              DCA      DCA        E      1DB       0
                text21                              A64      A64       70      1DB       0
                text20                              D22      D22       26      1DB       0
                text19                              842      842       B4      1DB       0
                text18                              B3E      B3E       66      1DB       0
                text17                              C4E      C4E       2E      1DB       0
                text16                              5AC      5AC       EC      1DB       0
                text15                              DDE      DDE        4      1DB       0
                text14                              BA4      BA4       40      1DB       0
                text13                              CD2      CD2       2A      1DB       0
                text12                              3B6      3B6       FE      1DB       0
                text11                              976      976       7C      1DB       0
                text10                              C7C      C7C       2C      1DB       0
                text9                               DAA      DAA       10      1DB       0
                text8                               C1A      C1A       34      1DB       0
                text7                               9F2      9F2       72      1DB       0
                text6                               D84      D84       14      1DB       0
                text5                               4B4      4B4       F8      1DB       0
                text4                               D98      D98       12      1DB       0
                text3                               698      698       E8      1DB       0
                text2                               DE2      DE2        2      1DB       0
                text1                               CA8      CA8       2A      1DB       0
                text0                               8F6      8F6       80      1DB       0
                cstackCOMRAM                          1        1       32        1       1
                cstackBANK0                          8C       8C        D       60       1
                bssBANK0                             60       60       2C       60       1
                bssCOMRAM                            33       33       17        1       1
                cinit                               CFC      CFC       26      1DB       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text30                              DE4      DE4        2         0
                text29                              DBA      DBA       10         0
                text28                              AD4      AD4       6A         0
                text27                              D66      D66       1E         0
                text26                              DD8      DD8        6         0
                intcode_body                        780      780       C2         0
                text24                              BE4      BE4       36         0
                text23                              D48      D48       1E         0
                text22                              DCA      DCA        E         0
                text21                              A64      A64       70         0
                text20                              D22      D22       26         0
                text19                              842      842       B4         0
                text18                              B3E      B3E       66         0
                text17                              C4E      C4E       2E         0
                text16                              5AC      5AC       EC         0
                text15                              DDE      DDE        4         0
                text14                              BA4      BA4       40         0
                text13                              CD2      CD2       2A         0
                text12                              3B6      3B6       FE         0
                text11                              976      976       7C         0
                text10                              C7C      C7C       2C         0
                text9                               DAA      DAA       10         0
                text8                               C1A      C1A       34         0
                text7                               9F2      9F2       72         0
                text6                               D84      D84       14         0
                text5                               4B4      4B4       F8         0
                text4                               D98      D98       12         0
                text3                               698      698       E8         0
                text2                               DE2      DE2        2         0
                text1                               CA8      CA8       2A         0
                text0                               8F6      8F6       80         0
                cinit                               CFC      CFC       26         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       B6         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 4A       4A        1         1
                cstackCOMRAM                          1        1       32         1
                bssCOMRAM                            33       33       17         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          8C       8C        D         1
                bssBANK0                             60       60       2C         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00004A  00004B         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                bssBANK0                       000060  000039  000099        60       1  BANK0   
                smallconst                     000300  0000B6  0003B6       180       0  SMALLCON
                text12                         0003B6  000A30  000DE6       1DB       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000099-0000FF               67
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00004B-00005F               15
                         000099-0002FF              267
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         000DE6-003FFF             321A
        COMRAM           00004B-00005F               15
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         000DE6-003FFF             321A
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000DE6-003FFF             321A
        RAM              000099-0002FF              100
        SFR              000D00-000FFF              100
        SMALLCONST       000DE6-003FFF              100
        STACK            000099-0002FF              267

                                  Symbol Table

?_RunCan_XmitService                 cstackCOMRAM 000016
?___awmod                            cstackCOMRAM 000016
?___wmul                             cstackCOMRAM 00001C
?_printf                             cstackCOMRAM 000016
ES_CheckUserEvents@i                 cstackCOMRAM 000016
ES_DeQueue@NumLeft                   cstackCOMRAM 000029
ES_DeQueue@SaveCrit                  cstackCOMRAM 000028
ES_DeQueue@pBlock                    cstackCOMRAM 000022
ES_DeQueue@pReturnEvent              cstackCOMRAM 000024
ES_DeQueue@pThisQueue                cstackCOMRAM 00002A
ES_EnQueueFIFO@Event2Add             cstackCOMRAM 000024
ES_EnQueueFIFO@SaveCrit              cstackCOMRAM 00002A
ES_EnQueueFIFO@pBlock                cstackCOMRAM 000022
ES_EnQueueFIFO@pThisQueue            cstackCOMRAM 00002B
ES_GetMSBitSet@LoopCntr              cstackCOMRAM 00001F
ES_GetMSBitSet@Nybble2Test           cstackCOMRAM 00001E
ES_GetMSBitSet@ReturnVal             cstackCOMRAM 00001D
ES_GetMSBitSet@Val2Check             cstackCOMRAM 000016
ES_InitQueue@BlockSize               cstackCOMRAM 000018
ES_InitQueue@pBlock                  cstackCOMRAM 000016
ES_InitQueue@pThisQueue              cstackCOMRAM 000019
ES_Initialize@NewRate                cstackBANK0  000090
ES_Initialize@i                      cstackBANK0  000092
ES_PostToService@TheEvent            cstackCOMRAM 00002D
ES_PostToService@WhichService        cstackCOMRAM 000032
ES_Run@HighestPrior                  cstackBANK0  000097
ES_Run@ThisEvent                     bssCOMRAM    000047
ES_Timer_Init@Rate                   cstackCOMRAM 000018
ES_Timer_InitTimer@NewTime           cstackCOMRAM 000001
ES_Timer_InitTimer@Num               cstackCOMRAM 000005
ES_Timer_Tick_Resp@NeedsProcessing   bssCOMRAM    000036
ES_Timer_Tick_Resp@NewEvent          bssCOMRAM    000033
ES_Timer_Tick_Resp@NextTimer2Process bssCOMRAM    000044
ISR@LastTime                         bssCOMRAM    000038
ISR@NextTime                         bssCOMRAM    00003A
InitCan_XmitService@Priority         cstackBANK0  00008F
InitCan_XmitService@ThisEvent        cstackBANK0  00008C
PostCan_XmitService@ThisEvent        cstackBANK0  00008C
RunCan_XmitService@ReturnEvent       cstackCOMRAM 000019
RunCan_XmitService@ThisEvent         cstackCOMRAM 000016
_ADCON1                              (abs)        000FC1
_BRGCON1bits                         (abs)        000F70
_BRGCON2bits                         (abs)        000F71
_BRGCON3bits                         (abs)        000F72
_BitNum2SetMask                      smallconst   000301
_BusErrorResponse                    text30       000DE4
_CANCON                              (abs)        000F6F
_CANSTATbits                         (abs)        000F6E
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_CIOCON                              (abs)        000F73
_CanErrorResponse                    text29       000DBA
_CanRCVResponse                      text27       000D66
_CanXmitResponse                     text26       000DD8
_Check4Keystroke                     text15       000DDE
_DistList00                          smallconst   000359
_ECANCON                             (abs)        000F77
_ERRIE                               (abs)        007D1D
_ERRIF                               (abs)        007D25
_ES_CheckUserEvents                  text14       000BA4
_ES_DeQueue                          text12       0003B6
_ES_EnQueueFIFO                      text19       000842
_ES_EventList                        smallconst   000357
_ES_GetMSBitSet                      text7        0009F2
_ES_InitQueue                        text24       000BE4
_ES_Initialize                       text16       0005AC
_ES_PostToService                    text18       000B3E
_ES_Run                              text3        000698
_ES_Timer_Init                       text22       000DCA
_ES_Timer_InitTimer                  text28       000AD4
_ES_Timer_Tick_Resp                  text5        0004B4
_EventQueues                         smallconst   000354
_GIE                                 (abs)        007F97
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_IRXIE                               (abs)        007D1F
_IRXIF                               (abs)        007D27
_ISR                                 intcode      000008
_InitCanHardware                     text11       000976
_InitCan_XmitService                 text17       000C4E
_InitPins                            text10       000C7C
_LATA                                (abs)        000F89
_LATA0                               (abs)        007C48
_LATA1                               (abs)        007C49
_LATA2                               (abs)        007C4A
_LATA3                               (abs)        007C4B
_LATB                                (abs)        000F8A
_LATB2                               (abs)        007C52
_MyPriority                          bssCOMRAM    000045
_Nybble2MSBitNum                     smallconst   000341
_PEIE                                (abs)        007F96
_PIE1                                (abs)        000F9D
_PORTA                               (abs)        000F80
_PORTB                               (abs)        000F81
_PostCan_XmitService                 text6        000D84
_Queue0                              bssBANK0     000080
_RXB0CONbits                         (abs)        000F60
_RXB0D0                              (abs)        000F66
_RXB0IE                              (abs)        007D18
_RXB0IF                              (abs)        007D20
_RXF0EIDH                            (abs)        000F02
_RXF0EIDL                            (abs)        000F03
_RXF0SIDH                            (abs)        000F00
_RXF0SIDL                            (abs)        000F01
_RXM0EIDH                            (abs)        000F1A
_RXM0EIDL                            (abs)        000F1B
_RXM0SIDH                            (abs)        000F18
_RXM0SIDL                            (abs)        000F19
_Ready                               bssCOMRAM    00003C
_RunCan_XmitService                  text8        000C1A
_SCS1                                (abs)        007E99
_ServDescList                        smallconst   000350
_SysTickCounter                      bssCOMRAM    00003E
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssCOMRAM    000040
_TMR_TimerArray                      bssBANK0     000060
_TRISAbits                           (abs)        000F92
_TRISBbits                           (abs)        000F93
_TXB0CONbits                         (abs)        000F40
_TXB0D0                              (abs)        000F46
_TXB0D1                              (abs)        000F47
_TXB0DLC                             (abs)        000F45
_TXB0EIDH                            (abs)        000F43
_TXB0EIDL                            (abs)        000F44
_TXB0IF                              (abs)        007D22
_TXB0SIDH                            (abs)        000F41
_TXB0SIDL                            (abs)        000F42
_TickCount                           bssCOMRAM    000046
_Timer2PostFunc                      smallconst   000321
_ToggleDebugLED                      text9        000DAA
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        000D98
__HW_Timer_Init                      text23       000D48
__HW_Timer_Init@Rate                 cstackCOMRAM 000016
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003B6
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        000099
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         00004B
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext23                            text23       000000
__Htext24                            text24       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext4                             text4        000000
__Htext5                             text5        000000
__Htext6                             text6        000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         00004A
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext23                            text23       000000
__Ltext24                            text24       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext4                             text4        000000
__Ltext5                             text5        000000
__Ltext6                             text6        000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    000042
__S0                                 (abs)        30000E
__S1                                 (abs)        000099
__S2                                 (abs)        000000
___awmod                             text21       000A64
___awmod@counter                     cstackCOMRAM 00001A
___awmod@dividend                    cstackCOMRAM 000016
___awmod@divisor                     cstackCOMRAM 000018
___awmod@sign                        cstackCOMRAM 00001B
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text13       000CD2
___lbmod@counter                     cstackCOMRAM 000018
___lbmod@dividend                    cstackCOMRAM 000017
___lbmod@divisor                     cstackCOMRAM 000016
___lbmod@rem                         cstackCOMRAM 000019
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text20       000D22
___wmul@multiplicand                 cstackCOMRAM 00001E
___wmul@multiplier                   cstackCOMRAM 00001C
___wmul@product                      cstackCOMRAM 000020
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_BusErrorResponse            text30       000DE6
__end_of_CanErrorResponse            text29       000DCA
__end_of_CanRCVResponse              text27       000D84
__end_of_CanXmitResponse             text26       000DDE
__end_of_Check4Keystroke             text15       000DE2
__end_of_DistList00                  smallconst   00035B
__end_of_ES_CheckUserEvents          text14       000BE4
__end_of_ES_DeQueue                  text12       0004B4
__end_of_ES_EnQueueFIFO              text19       0008F6
__end_of_ES_EventList                smallconst   000359
__end_of_ES_GetMSBitSet              text7        000A64
__end_of_ES_InitQueue                text24       000C1A
__end_of_ES_Initialize               text16       000698
__end_of_ES_PostToService            text18       000BA4
__end_of_ES_Run                      text3        000780
__end_of_ES_Timer_Init               text22       000DD8
__end_of_ES_Timer_InitTimer          text28       000B3E
__end_of_ES_Timer_Tick_Resp          text5        0005AC
__end_of_EventQueues                 smallconst   000357
__end_of_ISR                         intcode_body 000842
__end_of_InitCanHardware             text11       0009F2
__end_of_InitCan_XmitService         text17       000C7C
__end_of_InitPins                    text10       000CA8
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PostCan_XmitService         text6        000D98
__end_of_RunCan_XmitService          text8        000C4E
__end_of_ServDescList                smallconst   000354
__end_of_Timer2PostFunc              smallconst   000341
__end_of_ToggleDebugLED              text9        000DBA
__end_of__HW_Process_Pending_Ints    text4        000DAA
__end_of__HW_Timer_Init              text23       000D66
__end_of___awmod                     text21       000AD4
__end_of___lbmod                     text13       000CFC
__end_of___wmul                      text20       000D48
__end_of__initialization             cinit        000D14
__end_of_main                        text0        000976
__end_of_printf                      text1        000CD2
__end_of_putch                       text2        000DE4
__initialization                     cinit        000CFC
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     000060
__pbssCOMRAM                         bssCOMRAM    000033
__pcinit                             cinit        000CFC
__pcstackBANK0                       cstackBANK0  00008C
__pcstackCOMRAM                      cstackCOMRAM 000001
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 000780
__psmallconst                        smallconst   000300
__ptext0                             text0        0008F6
__ptext1                             text1        000CA8
__ptext10                            text10       000C7C
__ptext11                            text11       000976
__ptext12                            text12       0003B6
__ptext13                            text13       000CD2
__ptext14                            text14       000BA4
__ptext15                            text15       000DDE
__ptext16                            text16       0005AC
__ptext17                            text17       000C4E
__ptext18                            text18       000B3E
__ptext19                            text19       000842
__ptext2                             text2        000DE2
__ptext20                            text20       000D22
__ptext21                            text21       000A64
__ptext22                            text22       000DCA
__ptext23                            text23       000D48
__ptext24                            text24       000BE4
__ptext26                            text26       000DD8
__ptext27                            text27       000D66
__ptext28                            text28       000AD4
__ptext29                            text29       000DBA
__ptext3                             text3        000698
__ptext30                            text30       000DE4
__ptext31                            text31       000000
__ptext4                             text4        000D98
__ptext5                             text5        0004B4
__ptext6                             text6        000D84
__ptext7                             text7        0009F2
__ptext8                             text8        000C1A
__ptext9                             text9        000DAA
__ramtop                             ramtop       000300
__size_of_BusErrorResponse           (abs)        000000
__size_of_CanErrorResponse           (abs)        000000
__size_of_CanRCVResponse             (abs)        000000
__size_of_CanXmitResponse            (abs)        000000
__size_of_Check4Keystroke            (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitCanHardware            (abs)        000000
__size_of_InitCan_XmitService        (abs)        000000
__size_of_InitPins                   (abs)        000000
__size_of_PostCan_XmitService        (abs)        000000
__size_of_RunCan_XmitService         (abs)        000000
__size_of_ToggleDebugLED             (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        0008F6
_printf                              text1        000CA8
_putch                               text2        000DE2
btemp                                temp         00004A
end_of_initialization                cinit        000D14
int$flags                            temp         00004A
int_func                             intcode_body 000780
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  000098
printf@ap                            cstackCOMRAM 000018
printf@c                             cstackCOMRAM 00001A
printf@f                             cstackCOMRAM 000016
stackhi                              (abs)        0002FF
stacklo                              (abs)        000099
start                                init         000016
start_initialization                 cinit        000CFC


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   12[BANK0 ] enum E15642
 Return value:  Size  Location     Type
                  2  299[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 Parameters:    Size  Location     Type
  f               2   21[COMRAM] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2   23[COMRAM] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1   25[COMRAM] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2   21[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15490
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunCan_XmitService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 225 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostCan_XmitService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _PostCan_XmitService *****************
 Defined at:
		line 113 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    0[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2   21[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1   30[COMRAM] char 
  Nybble2Test     1   29[COMRAM] unsigned char 
  ReturnVal       1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          5       0       0       0
      Totals:        10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunCan_XmitService *****************
 Defined at:
		line 136 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   21[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   24[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   21[COMRAM] struct ES_Event_t
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_InitCanHardware
		_InitPins
		_ToggleDebugLED
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ToggleDebugLED *****************
 Defined at:
		line 334 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _InitPins *****************
 Defined at:
		line 313 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _InitCanHardware *****************
 Defined at:
		line 225 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   33[COMRAM] PTR struct ES_Event_t
		 -> Queue0(12), 
  pReturnEvent    2   35[COMRAM] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   41[COMRAM] PTR struct .
		 -> Queue0(12), 
  NumLeft         1   40[COMRAM] unsigned char 
  SaveCrit        1   39[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          2       0       0       0
      Totals:        10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   21[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   22[COMRAM] unsigned char 
  rem             1   24[COMRAM] unsigned char 
  counter         1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Check4Keystroke
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 62 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2    4[BANK0 ] enum E15419
 Auto vars:     Size  Location     Type
  i               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15490
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitCan_XmitService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitCan_XmitService *****************
 Defined at:
		line 79 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1    3[BANK0 ] unsigned char 
  ThisEvent       3    0[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   44[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitCan_XmitService
		_PostCan_XmitService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   33[COMRAM] PTR struct ES_Event_t
		 -> Queue0(12), 
  Event2Add       3   35[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   42[COMRAM] PTR struct .
		 -> Queue0(12), 
  SaveCrit        1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   27[COMRAM] unsigned int 
  multiplicand    2   29[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   31[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   27[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   21[COMRAM] int 
  divisor         2   23[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   26[COMRAM] unsigned char 
  counter         1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   21[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2   23[COMRAM] enum E15419
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 72 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2   21[COMRAM] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   21[COMRAM] PTR struct ES_Event_t
		 -> Queue0(12), 
  BlockSize       1   23[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2   24[COMRAM] PTR struct .
		 -> Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 112 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_BusErrorResponse
		_CanErrorResponse
		_CanRCVResponse
		_CanXmitResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _CanXmitResponse *****************
 Defined at:
		line 183 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _CanRCVResponse *****************
 Defined at:
		line 191 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ES_Timer_InitTimer
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15468
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_CanRCVResponse
 This function uses a non-reentrant model


 *************** function _CanErrorResponse *****************
 Defined at:
		line 204 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _BusErrorResponse *****************
 Defined at:
		line 213 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	0842	0000	181
		_ES_DeQueue    		CODE           	03B6	0000	255
		_ES_InitQueue  		CODE           	0BE4	0000	55

ES_Queue.c estimated size: 491

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	0BA4	0000	65

ES_CheckEvents.c estimated size: 65

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c
		___lbmod       		CODE           	0CD2	0000	43

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c estimated size: 43

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	09F2	0000	115

ES_LookupTables.c estimated size: 115

EventCheckers.c
		_Check4Keystroke		CODE           	0DDE	0000	5

EventCheckers.c estimated size: 5

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c
		___wmul        		CODE           	0D22	0000	39

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c estimated size: 39

Can_XmitService.c
		_InitCan_XmitService		CODE           	0C4E	0000	47
		_RunCan_XmitService		CODE           	0C1A	0000	53
		_InitPins      		CODE           	0C7C	0000	45
		_CanXmitResponse		CODE           	0DD8	0000	7
		_CanRCVResponse		CODE           	0D66	0000	31
		_BusErrorResponse		CODE           	0DE4	0000	3
		_PostCan_XmitService		CODE           	0D84	0000	21
		_InitCanHardware		CODE           	0976	0000	125
		_CanErrorResponse		CODE           	0DBA	0000	17
		_ToggleDebugLED		CODE           	0DAA	0000	17

Can_XmitService.c estimated size: 366

ES_Framework.c
		_ES_PostToService		CODE           	0B3E	0000	103
		_ES_Run        		CODE           	0698	0000	233
		_ES_Initialize 		CODE           	05AC	0000	237

ES_Framework.c estimated size: 573

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0359	0000	3
		_ES_EventList  		SMALLCONST     	0357	0000	3
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	0354	0000	4
		__initialization		CODE           	0CFC	0000	25
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	5

shared estimated size: 122

ES_Port.c
		_ISR           		CODE           	0008	0000	209
		__HW_Process_Pending_Ints		CODE           	0D98	0000	19
		__HW_Timer_Init		CODE           	0D48	0000	31

ES_Port.c estimated size: 259

/Applications/microchip/xc8/v1.38/sources/common/awmod.c
		___awmod       		CODE           	0A64	0000	113

/Applications/microchip/xc8/v1.38/sources/common/awmod.c estimated size: 113

/Applications/microchip/xc8/v1.38/sources/common/putch.c
		_putch         		CODE           	0DE2	0000	3

/Applications/microchip/xc8/v1.38/sources/common/putch.c estimated size: 3

ES_Timers.c
		_ES_Timer_Init 		CODE           	0DCA	0000	15
		_ES_Timer_InitTimer		CODE           	0AD4	0000	107
		_ES_Timer_Tick_Resp		CODE           	04B4	0000	249

ES_Timers.c estimated size: 371

main.c
		_main          		CODE           	08F6	0000	129

main.c estimated size: 129

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c
		_printf        		CODE           	0CA8	0000	43

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c estimated size: 43

