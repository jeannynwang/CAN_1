Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v1.38/dat/en_msgs.txt -cs \
  -h+dist/default/production/DotStar_Pattern_Control.production.sym \
  --cmf=dist/default/production/DotStar_Pattern_Control.production.cmf -z \
  -Q18F2480 -o/tmp/xciayDIxx \
  -Mdist/default/production/DotStar_Pattern_Control.production.map -E1 \
  -ver=XC8 -ASTACK=01B4h-01ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcVaj3sRO.obj \
  dist/default/production/DotStar_Pattern_Control.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcVaj3sRO.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/DotStar_Pattern_Control.production.obj
                intcode                               8        8        E        4       0
                temp                                 56       56        1        1       1
                smallconst                          300      300       CC      180       0
                text59                             1A20     1A20        8      1E6       0
                text58                             1334     1334       6E      1E6       0
                text57                             19D4     19D4       16      1E6       0
                text56                             12C4     12C4       70      1E6       0
                text55                             1874     1874       26      1E6       0
                text54                              E1A      E1A       B4      1E6       0
                text53                             13A2     13A2       6A      1E6       0
                text52                             19BE     19BE       16      1E6       0
                text51                             19A8     19A8       16      1E6       0
                intcode_body                        D60      D60       BA      1E6       0
                text49                             16B0     16B0       3C      1E6       0
                text48                             1930     1930       1C      1E6       0
                text47                             19F8     19F8        E      1E6       0
                text46                              F72      F72       A2      1E6       0
                text45                             1726     1726       36      1E6       0
                text44                              BBA      BBA       E2      1E6       0
                text43                             124E     124E       76      1E6       0
                text42                              9DE      9DE       F0      1E6       0
                text41                             19EA     19EA        E      1E6       0
                text40                             189A     189A       22      1E6       0
                text39                             1A28     1A28        6      1E6       0
                text38                             15EC     15EC       44      1E6       0
                text37                             1474     1474       52      1E6       0
                text36                             16EC     16EC       3A      1E6       0
                text35                             17F6     17F6       30      1E6       0
                text34                              ACE      ACE       EC      1E6       0
                text33                             1A34     1A34        4      D1A       0
                text32                             155E     155E       4A      1E6       0
                text31                             15A8     15A8       44      1E6       0
                text30                              6AC      6AC      128      1E6       0
                text29                             140C     140C       68      1E6       0
                text28                             18BC     18BC       20      1E6       0
                text27                             14C6     14C6       4E      1E6       0
                text26                             1A18     1A18        8      1E6       0
                text25                             17C4     17C4       32      1E6       0
                text24                             1514     1514       4A      1E6       0
                text23                             1630     1630       42      1E6       0
                text22                             11CE     11CE       80      1E6       0
                text21                             1014     1014       9A      1E6       0
                text20                              3CC      3CC      19E      1E6       0
                text19                             184E     184E       26      1E6       0
                text18                             1914     1914       1C      1E6       0
                text17                             1A10     1A10        8      1E6       0
                text16                             18F8     18F8       1C      1E6       0
                text15                             194C     194C       1A      1E6       0
                text14                             1A06     1A06        A      1E6       0
                text13                             1672     1672       3E      1E6       0
                text12                              C9C      C9C       C4      1E6       0
                text11                              56A      56A      142      1E6       0
                text10                             1826     1826       28      1E6       0
                text9                               ECE      ECE       A4      1E6       0
                text8                              1992     1992       16      1E6       0
                text7                              197C     197C       16      1E6       0
                text6                              18DC     18DC       1C      1E6       0
                text5                               7D4      7D4      116      1E6       0
                text4                              1966     1966       16      1E6       0
                text3                               8EA      8EA       F4      1E6       0
                text2                              1A38     1A38        2      D1A       0
                text1                              1790     1790       34      1E6       0
                text0                              113E     113E       90      1E6       0
                cstackCOMRAM                          1        1       33        1       1
                cstackBANK0                          BD       BD       3B       60       1
                bssBANK2                            200      200       F8      200       1
                dataBANK1                           180      180       34      100       1
                bssBANK1                            100      100       80      100       1
                dataBANK0                            F8       F8        5       60       1
                bssBANK0                             60       60       5D       60       1
                dataCOMRAM                           55       55        1        1       1
                bssCOMRAM                            34       34       21        1       1
                cinit                              10AE     10AE       90      1E6       0
                idataBANK1                         175C     175C       34      1E6       0
                idataBANK0                         1A2E     1A2E        5      1E6       0
                idataCOMRAM                        1A3A     1A3A        1      D1A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text59                             1A20     1A20        8         0
                text58                             1334     1334       6E         0
                text57                             19D4     19D4       16         0
                text56                             12C4     12C4       70         0
                text55                             1874     1874       26         0
                text54                              E1A      E1A       B4         0
                text53                             13A2     13A2       6A         0
                text52                             19BE     19BE       16         0
                text51                             19A8     19A8       16         0
                intcode_body                        D60      D60       BA         0
                text49                             16B0     16B0       3C         0
                text48                             1930     1930       1C         0
                text47                             19F8     19F8        E         0
                text46                              F72      F72       A2         0
                text45                             1726     1726       36         0
                text44                              BBA      BBA       E2         0
                text43                             124E     124E       76         0
                text42                              9DE      9DE       F0         0
                text41                             19EA     19EA        E         0
                text40                             189A     189A       22         0
                text39                             1A28     1A28        6         0
                text38                             15EC     15EC       44         0
                text37                             1474     1474       52         0
                text36                             16EC     16EC       3A         0
                text35                             17F6     17F6       30         0
                text34                              ACE      ACE       EC         0
                text33                             1A34     1A34        4         0
                text32                             155E     155E       4A         0
                text31                             15A8     15A8       44         0
                text30                              6AC      6AC      128         0
                text29                             140C     140C       68         0
                text28                             18BC     18BC       20         0
                text27                             14C6     14C6       4E         0
                text26                             1A18     1A18        8         0
                text25                             17C4     17C4       32         0
                text24                             1514     1514       4A         0
                text23                             1630     1630       42         0
                text22                             11CE     11CE       80         0
                text21                             1014     1014       9A         0
                text20                              3CC      3CC      19E         0
                text19                             184E     184E       26         0
                text18                             1914     1914       1C         0
                text17                             1A10     1A10        8         0
                text16                             18F8     18F8       1C         0
                text15                             194C     194C       1A         0
                text14                             1A06     1A06        A         0
                text13                             1672     1672       3E         0
                text12                              C9C      C9C       C4         0
                text11                              56A      56A      142         0
                text10                             1826     1826       28         0
                text9                               ECE      ECE       A4         0
                text8                              1992     1992       16         0
                text7                              197C     197C       16         0
                text6                              18DC     18DC       1C         0
                text5                               7D4      7D4      116         0
                text4                              1966     1966       16         0
                text3                               8EA      8EA       F4         0
                text2                              1A38     1A38        2         0
                text1                              1790     1790       34         0
                text0                              113E     113E       90         0
                cinit                              10AE     10AE       90         0
                idataBANK1                         175C     175C       34         0
                idataBANK0                         1A2E     1A2E        5         0
                idataCOMRAM                        1A3A     1A3A        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       CC         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 56       56        1         1
                cstackCOMRAM                          1        1       33         1
                dataCOMRAM                           55       55        1         1
                bssCOMRAM                            34       34       21         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          BD       BD       3B         1
                dataBANK0                            F8       F8        5         1
                bssBANK0                             60       60       5D         1

        CLASS   BANK1          
                dataBANK1                           180      180       34         1
                bssBANK1                            100      100       80         1

        CLASS   BANK2          
                bssBANK2                            200      200       F8         1

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000056  000057         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                bssBANK0                       000060  00009D  0000FD        60       1  BANK0   
                bssBANK1                       000100  0000B4  0001B4       100       1  BANK1   
                bssBANK2                       000200  0000F8  0002F8       200       1  BANK2   
                smallconst                     000300  0000CC  0003CC       180       0  SMALLCON
                text20                         0003CC  001667  001A33       1E6       0  CODE    
                text33                         001A34  000007  001A3B       D1A       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000FD-0000FF                3
        BANK1            0001B4-0001FF               4C
        BANK2            0002F8-0002FF                8
        BIGRAM           000057-00005F                9
                         0000FD-0000FF                3
                         0001B4-0001FF               4C
                         0002F8-0002FF                8
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         001A33-001A33                1
                         001A3B-003FFF             25C5
        COMRAM           000057-00005F                9
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         001A33-001A33                1
                         001A3B-003FFF             25C5
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001A33-001A33                1
                         001A3B-003FFF             25C5
        RAM              0000FD-0000FF                3
                         0001B4-0001FF               4C
                         0002F8-0002FF                8
        SFR              000D00-000FFF              100
        SMALLCONST       001A33-001A33                1
                         001A3B-003FFF              100
        STACK            0001B4-0001FF               4C

                                  Symbol Table

?_GetNextFrame                       cstackBANK0  0000BD
?_RunCan_XmitService                 cstackBANK0  0000E5
?_RunPatternControlService           cstackBANK0  0000E5
?_RunSPI32ControlService             cstackBANK0  0000E5
?_RunToggleService                   cstackBANK0  0000E5
?_UpdatePattern                      cstackBANK0  0000C6
?___awmod                            cstackBANK0  0000BD
?___llmod                            cstackBANK0  0000BD
?___wmul                             cstackBANK0  0000C3
?_printf                             cstackBANK0  0000BD
?i2___awmod                          cstackCOMRAM 000001
?i2___wmul                           cstackCOMRAM 000007
Can_XmitService@MyPriority           bssBANK0     000095
DotStar_Init@i                       cstackBANK0  0000C0
DotStar_Init@numPixels               cstackBANK0  0000BF
DotStar_Show@pixelPointer            cstackBANK0  0000E3
ES_CheckUserEvents@i                 cstackBANK0  0000BD
ES_DeQueue@NumLeft                   cstackBANK0  0000D0
ES_DeQueue@SaveCrit                  cstackBANK0  0000CF
ES_DeQueue@pBlock                    cstackBANK0  0000C9
ES_DeQueue@pReturnEvent              cstackBANK0  0000CB
ES_DeQueue@pThisQueue                cstackBANK0  0000D1
ES_EnQueueFIFO@Event2Add             cstackBANK0  0000CB
ES_EnQueueFIFO@SaveCrit              cstackBANK0  0000D1
ES_EnQueueFIFO@pBlock                cstackBANK0  0000C9
ES_EnQueueFIFO@pThisQueue            cstackBANK0  0000D2
ES_GetMSBitSet@LoopCntr              cstackBANK0  0000C6
ES_GetMSBitSet@Nybble2Test           cstackBANK0  0000C5
ES_GetMSBitSet@ReturnVal             cstackBANK0  0000C4
ES_GetMSBitSet@Val2Check             cstackBANK0  0000BD
ES_InitQueue@BlockSize               cstackBANK0  0000BF
ES_InitQueue@pBlock                  cstackBANK0  0000BD
ES_InitQueue@pThisQueue              cstackBANK0  0000C0
ES_Initialize@NewRate                cstackBANK0  0000DE
ES_Initialize@i                      cstackBANK0  0000E0
ES_PostToService@TheEvent            cstackBANK0  0000D4
ES_PostToService@WhichService        cstackBANK0  0000D9
ES_Run@HighestPrior                  cstackBANK0  0000F6
ES_Run@ThisEvent                     bssBANK0     0000BA
ES_Timer_Init@Rate                   cstackBANK0  0000BF
ES_Timer_InitTimer@NewTime           cstackBANK0  0000BD
ES_Timer_InitTimer@Num               cstackBANK0  0000C1
ES_Timer_StopTimer@Num               cstackBANK0  0000C1
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     00008B
ES_Timer_Tick_Resp@NewEvent          bssBANK0     000088
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     000096
ISR@LastTime                         bssCOMRAM    000034
ISR@NextTime                         bssCOMRAM    000036
InitCan_XmitService@Priority         cstackBANK0  0000DD
InitCan_XmitService@ThisEvent        cstackBANK0  0000DA
InitPatternControlService@Priority   cstackBANK0  0000DD
InitPatternControlService@ThisEvent  cstackBANK0  0000DA
InitSPI32ControlService@Priority     cstackBANK0  0000DD
InitSPI32ControlService@ThisEvent    cstackBANK0  0000DA
InitToggleService@Priority           cstackBANK0  0000DD
InitToggleService@ThisEvent          cstackBANK0  0000DA
Pattern_RGBPatterns@Length           bssBANK0     000097
Pattern_RGBPatterns@PatternConfigs   bssBANK0     00008D
PostPatternControlService@ThisEvent  cstackBANK0  0000DA
PostSPI32ControlService@ThisEvent    cstackBANK0  0000DA
PostToggleService@ThisEvent          cstackBANK0  0000DA
RunCan_XmitService@ReturnEvent       cstackBANK0  0000E8
RunCan_XmitService@ThisEvent         cstackBANK0  0000E5
RunPatternControlService@ReturnEvent cstackBANK0  0000E8
RunPatternControlService@ThisEvent   cstackBANK0  0000E5
RunPatternControlService@testEvent   cstackBANK0  0000EB
RunSPI32ControlService@ReturnEvent   cstackBANK0  0000EF
RunSPI32ControlService@ThisEvent     cstackBANK0  0000E5
RunToggleService@ReturnEvent         cstackBANK0  0000E8
RunToggleService@ThisEvent           cstackBANK0  0000E5
SPI32_ControlService@CurrentState    bssBANK0     000098
SPI32_ControlService@MyPriority      bssBANK0     000099
SPI32_EOTResponse@EOTevent           cstackCOMRAM 000021
SPI32_SendByte@newByte               cstackBANK0  0000BD
SPI32_TransmitFrames@framePointer    cstackBANK0  0000DD
SPI32_TransmitFrames@numFrames       cstackBANK0  0000DF
SPI32_TransmitFrames@transmitEvent   cstackBANK0  0000E0
SetupPattern@configs                 cstackBANK0  0000BD
SetupPattern@numPixels               cstackBANK0  0000BF
ToggleService@MyPriority             bssBANK0     00009A
UpdatePattern@brightness             cstackBANK0  0000CC
UpdatePattern@i                      cstackBANK0  0000D2
UpdatePattern@patternID              cstackBANK0  0000D1
XmitData@DataByte                    cstackBANK0  0000BD
_ADCON1                              (abs)        000FC1
_BRGCON1bits                         (abs)        000F70
_BRGCON2bits                         (abs)        000F71
_BRGCON3bits                         (abs)        000F72
_BitNum2SetMask                      smallconst   000301
_CANCON                              (abs)        000F6F
_CANSTAT                             (abs)        000F6E
_CANSTATbits                         (abs)        000F6E
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_CanRCVResponse                      text59       001A20
_CanXmitResponse                     text57       0019D4
_Check4Keystroke                     text33       001A34
_CurrentFrame                        bssBANK0     000080
_CurrentState                        bssBANK0     00009B
_DistList00                          smallconst   00036E
_DotStar_Init                        text42       0009DE
_DotStar_Off                         text18       001914
_DotStar_Show                        text23       001630
_ECANCON                             (abs)        000F77
_ES_CheckUserEvents                  text32       00155E
_ES_DeQueue                          text30       0006AC
_ES_EnQueueFIFO                      text44       000BBA
_ES_EventList                        smallconst   00036C
_ES_GetMSBitSet                      text9        000ECE
_ES_InitQueue                        text49       0016B0
_ES_Initialize                       text34       000ACE
_ES_PostToService                    text43       00124E
_ES_Run                              text3        0008EA
_ES_Timer_Init                       text47       0019F8
_ES_Timer_InitTimer                  text22       0011CE
_ES_Timer_StopTimer                  text27       0014C6
_ES_Timer_Tick_Resp                  text5        0007D4
_EventQueues                         smallconst   000360
_FrameIndex                          bssBANK0     00009C
_FramePointer                        bssBANK0     00008F
_GIE                                 (abs)        007F97
_GenColors                           dataBANK1    000180
_GetNextFrame                        text15       00194C
_HW_Init                             text40       00189A
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_ISR                                 intcode      000008
_InitCanHardware                     text29       00140C
_InitCan_XmitService                 text35       0017F6
_InitPatternControlService           text37       001474
_InitSPI32ControlService             text36       0016EC
_InitToggleService                   text38       0015EC
_LATA                                (abs)        000F89
_LATA0                               (abs)        007C48
_LATA1                               (abs)        007C49
_LATB                                (abs)        000F8A
_LATC                                (abs)        000F8B
_Length                              bssBANK0     00009D
_MyPriority                          bssBANK0     00009E
_NumFrames                           bssBANK0     00009F
_Nybble2MSBitNum                     smallconst   000351
_OffFrames                           bssBANK2     000200
_PIE1                                (abs)        000F9D
_PIE3                                (abs)        000FA3
_PORTA                               (abs)        000F80
_PORTB                               (abs)        000F81
_PORTC                               (abs)        000F82
_PatternConfigs                      dataBANK0    0000F8
_PatternStepCounter                  bssBANK0     0000A0
_PausePattern                        text26       001A18
_PixelFrames                         bssBANK1     000100
_PixelPattern                        bssBANK2     000280
_PostPatternControlService           text7        00197C
_PostSPI32ControlService             text6        0018DC
_PostSPI32ControlService$intlevel0   text6        0018E2
_PostToggleService                   text8        001992
_Queue0                              bssBANK0     0000A2
_Queue1                              bssBANK0     0000AE
_Queue2                              bssCOMRAM    00003D
_Queue3                              bssCOMRAM    000049
_RXB0CON                             (abs)        000F60
_RXB0CONbits                         (abs)        000F60
_RXB0IE                              (abs)        007D18
_RXB0IF                              (abs)        007D20
_RXF0SIDH                            (abs)        000F00
_RXF0SIDL                            (abs)        000F01
_RXM0SIDH                            (abs)        000F18
_RXM0SIDL                            (abs)        000F19
_Ready                               bssBANK0     000091
_ResetPattern                        text17       001A10
_RunCan_XmitService                  text10       001826
_RunPatternControlService            text12       000C9C
_RunSPI32ControlService              text11       00056A
_RunToggleService                    text13       001672
_SCS1                                (abs)        007E99
_SPI32_EOTResponse                   text51       0019A8
_SPI32_Init                          text39       001A28
_SPI32_SendByte                      text14       001A06
_SPI32_TransmitFrames                text25       0017C4
_SSPADD                              (abs)        000FC8
_SSPBUF                              (abs)        000FC9
_SSPCON1                             (abs)        000FC6
_SSPIE                               (abs)        007CEB
_SSPIF                               (abs)        007CF3
_SSPSTAT                             (abs)        000FC7
_ServDescList                        smallconst   000341
_SetupPattern                        text41       0019EA
_ShowPattern                         text19       00184E
_StopPattern                         text16       0018F8
_SysTickCounter                      bssCOMRAM    000038
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssBANK0     000093
_TMR_TimerArray                      bssBANK0     000060
_TRISA                               (abs)        000F92
_TRISBbits                           (abs)        000F93
_TRISC                               (abs)        000F94
_TXB0CONbits                         (abs)        000F40
_TXB0D0                              (abs)        000F46
_TXB0DLC                             (abs)        000F45
_TXB0IE                              (abs)        007D1A
_TXB0IF                              (abs)        007D22
_TXB0SIDH                            (abs)        000F41
_TXB0SIDL                            (abs)        000F42
_TestColor                           bssBANK0     000084
_TickCount                           bssBANK0     0000A1
_Timer2PostFunc                      smallconst   000321
_UpdatePattern                       text20       0003CC
_UpdatePattern$672                   cstackBANK0  0000CD
_XmitData                            text28       0018BC
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        001966
__HW_Timer_Init                      text48       001930
__HW_Timer_Init@Rate                 cstackBANK0  0000BD
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssBANK1                          bssBANK1     000000
__HbssBANK2                          bssBANK2     000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__HdataBANK0                         dataBANK0    000000
__HdataBANK1                         dataBANK1    000000
__HdataCOMRAM                        dataCOMRAM   000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__HidataBANK0                        idataBANK0   000000
__HidataBANK1                        idataBANK1   000000
__HidataCOMRAM                       idataCOMRAM  000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003CC
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        0002F8
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         000057
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext23                            text23       000000
__Htext24                            text24       000000
__Htext25                            text25       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext32                            text32       000000
__Htext33                            text33       000000
__Htext34                            text34       000000
__Htext35                            text35       000000
__Htext36                            text36       000000
__Htext37                            text37       000000
__Htext38                            text38       000000
__Htext39                            text39       000000
__Htext4                             text4        000000
__Htext40                            text40       000000
__Htext41                            text41       000000
__Htext42                            text42       000000
__Htext43                            text43       000000
__Htext44                            text44       000000
__Htext45                            text45       000000
__Htext46                            text46       000000
__Htext47                            text47       000000
__Htext48                            text48       000000
__Htext49                            text49       000000
__Htext5                             text5        000000
__Htext51                            text51       000000
__Htext52                            text52       000000
__Htext53                            text53       000000
__Htext54                            text54       000000
__Htext55                            text55       000000
__Htext56                            text56       000000
__Htext57                            text57       000000
__Htext58                            text58       000000
__Htext59                            text59       000000
__Htext6                             text6        000000
__Htext60                            text60       000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssBANK1                          bssBANK1     000000
__LbssBANK2                          bssBANK2     000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__LdataBANK0                         dataBANK0    000000
__LdataBANK1                         dataBANK1    000000
__LdataCOMRAM                        dataCOMRAM   000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__LidataBANK0                        idataBANK0   000000
__LidataBANK1                        idataBANK1   000000
__LidataCOMRAM                       idataCOMRAM  000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         000056
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext23                            text23       000000
__Ltext24                            text24       000000
__Ltext25                            text25       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext32                            text32       000000
__Ltext33                            text33       000000
__Ltext34                            text34       000000
__Ltext35                            text35       000000
__Ltext36                            text36       000000
__Ltext37                            text37       000000
__Ltext38                            text38       000000
__Ltext39                            text39       000000
__Ltext4                             text4        000000
__Ltext40                            text40       000000
__Ltext41                            text41       000000
__Ltext42                            text42       000000
__Ltext43                            text43       000000
__Ltext44                            text44       000000
__Ltext45                            text45       000000
__Ltext46                            text46       000000
__Ltext47                            text47       000000
__Ltext48                            text48       000000
__Ltext49                            text49       000000
__Ltext5                             text5        000000
__Ltext51                            text51       000000
__Ltext52                            text52       000000
__Ltext53                            text53       000000
__Ltext54                            text54       000000
__Ltext55                            text55       000000
__Ltext56                            text56       000000
__Ltext57                            text57       000000
__Ltext58                            text58       000000
__Ltext59                            text59       000000
__Ltext6                             text6        000000
__Ltext60                            text60       000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    00003A
__S0                                 (abs)        30000E
__S1                                 (abs)        0002F8
__S2                                 (abs)        000000
___awmod                             text46       000F72
___awmod@counter                     cstackBANK0  0000C1
___awmod@dividend                    cstackBANK0  0000BD
___awmod@divisor                     cstackBANK0  0000BF
___awmod@sign                        cstackBANK0  0000C2
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text31       0015A8
___lbmod@counter                     cstackBANK0  0000BF
___lbmod@dividend                    cstackBANK0  0000BE
___lbmod@divisor                     cstackBANK0  0000BD
___lbmod@rem                         cstackBANK0  0000C0
___llmod                             text21       001014
___llmod@counter                     cstackBANK0  0000C5
___llmod@dividend                    cstackBANK0  0000BD
___llmod@divisor                     cstackBANK0  0000C1
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text45       001726
___wmul@multiplicand                 cstackBANK0  0000C5
___wmul@multiplier                   cstackBANK0  0000C3
___wmul@product                      cstackBANK0  0000C7
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_CanRCVResponse              text59       001A28
__end_of_CanXmitResponse             text57       0019EA
__end_of_Check4Keystroke             text33       001A38
__end_of_DistList00                  smallconst   000372
__end_of_DotStar_Init                text42       000ACE
__end_of_DotStar_Off                 text18       001930
__end_of_DotStar_Show                text23       001672
__end_of_ES_CheckUserEvents          text32       0015A8
__end_of_ES_DeQueue                  text30       0007D4
__end_of_ES_EnQueueFIFO              text44       000C9C
__end_of_ES_EventList                smallconst   00036E
__end_of_ES_GetMSBitSet              text9        000F72
__end_of_ES_InitQueue                text49       0016EC
__end_of_ES_Initialize               text34       000BBA
__end_of_ES_PostToService            text43       0012C4
__end_of_ES_Run                      text3        0009DE
__end_of_ES_Timer_Init               text47       001A06
__end_of_ES_Timer_InitTimer          text22       00124E
__end_of_ES_Timer_StopTimer          text27       001514
__end_of_ES_Timer_Tick_Resp          text5        0008EA
__end_of_EventQueues                 smallconst   00036C
__end_of_GetNextFrame                text15       001966
__end_of_HW_Init                     text40       0018BC
__end_of_ISR                         intcode_body 000E1A
__end_of_InitCanHardware             text29       001474
__end_of_InitCan_XmitService         text35       001826
__end_of_InitPatternControlService   text37       0014C6
__end_of_InitSPI32ControlService     text36       001726
__end_of_InitToggleService           text38       001630
__end_of_Nybble2MSBitNum             smallconst   000360
__end_of_PausePattern                text26       001A20
__end_of_PostPatternControlService   text7        001992
__end_of_PostSPI32ControlService     text6        0018F8
__end_of_PostToggleService           text8        0019A8
__end_of_ResetPattern                text17       001A18
__end_of_RunCan_XmitService          text10       00184E
__end_of_RunPatternControlService    text12       000D60
__end_of_RunSPI32ControlService      text11       0006AC
__end_of_RunToggleService            text13       0016B0
__end_of_SPI32_EOTResponse           text51       0019BE
__end_of_SPI32_Init                  text39       001A2E
__end_of_SPI32_SendByte              text14       001A10
__end_of_SPI32_TransmitFrames        text25       0017F6
__end_of_ServDescList                smallconst   000351
__end_of_SetupPattern                text41       0019F8
__end_of_ShowPattern                 text19       001874
__end_of_StopPattern                 text16       001914
__end_of_Timer2PostFunc              smallconst   000341
__end_of_UpdatePattern               text20       00056A
__end_of_XmitData                    text28       0018DC
__end_of__HW_Process_Pending_Ints    text4        00197C
__end_of__HW_Timer_Init              text48       00194C
__end_of___awmod                     text46       001014
__end_of___lbmod                     text31       0015EC
__end_of___llmod                     text21       0010AE
__end_of___wmul                      text45       00175C
__end_of__initialization             cinit        001130
__end_of_main                        text0        0011CE
__end_of_memcpy                      text24       00155E
__end_of_printf                      text1        0017C4
__end_of_putch                       text2        001A3A
__end_ofi2_ES_EnQueueFIFO            text54       000ECE
__end_ofi2_ES_PostToService          text53       00140C
__end_ofi2_ES_Timer_InitTimer        text58       0013A2
__end_ofi2_PostSPI32ControlService   text52       0019D4
__end_ofi2___awmod                   text56       001334
__end_ofi2___wmul                    text55       00189A
__initialization                     cinit        0010AE
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     000060
__pbssBANK1                          bssBANK1     000100
__pbssBANK2                          bssBANK2     000200
__pbssCOMRAM                         bssCOMRAM    000034
__pcinit                             cinit        0010AE
__pcstackBANK0                       cstackBANK0  0000BD
__pcstackCOMRAM                      cstackCOMRAM 000001
__pdataBANK0                         dataBANK0    0000F8
__pdataBANK1                         dataBANK1    000180
__pdataCOMRAM                        dataCOMRAM   000055
__pidataBANK0                        idataBANK0   001A2E
__pidataBANK1                        idataBANK1   00175C
__pidataCOMRAM                       idataCOMRAM  001A3A
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 000D60
__psmallconst                        smallconst   000300
__ptext0                             text0        00113E
__ptext1                             text1        001790
__ptext10                            text10       001826
__ptext11                            text11       00056A
__ptext12                            text12       000C9C
__ptext13                            text13       001672
__ptext14                            text14       001A06
__ptext15                            text15       00194C
__ptext16                            text16       0018F8
__ptext17                            text17       001A10
__ptext18                            text18       001914
__ptext19                            text19       00184E
__ptext2                             text2        001A38
__ptext20                            text20       0003CC
__ptext21                            text21       001014
__ptext22                            text22       0011CE
__ptext23                            text23       001630
__ptext24                            text24       001514
__ptext25                            text25       0017C4
__ptext26                            text26       001A18
__ptext27                            text27       0014C6
__ptext28                            text28       0018BC
__ptext29                            text29       00140C
__ptext3                             text3        0008EA
__ptext30                            text30       0006AC
__ptext31                            text31       0015A8
__ptext32                            text32       00155E
__ptext33                            text33       001A34
__ptext34                            text34       000ACE
__ptext35                            text35       0017F6
__ptext36                            text36       0016EC
__ptext37                            text37       001474
__ptext38                            text38       0015EC
__ptext39                            text39       001A28
__ptext4                             text4        001966
__ptext40                            text40       00189A
__ptext41                            text41       0019EA
__ptext42                            text42       0009DE
__ptext43                            text43       00124E
__ptext44                            text44       000BBA
__ptext45                            text45       001726
__ptext46                            text46       000F72
__ptext47                            text47       0019F8
__ptext48                            text48       001930
__ptext49                            text49       0016B0
__ptext5                             text5        0007D4
__ptext51                            text51       0019A8
__ptext52                            text52       0019BE
__ptext53                            text53       0013A2
__ptext54                            text54       000E1A
__ptext55                            text55       001874
__ptext56                            text56       0012C4
__ptext57                            text57       0019D4
__ptext58                            text58       001334
__ptext59                            text59       001A20
__ptext6                             text6        0018DC
__ptext60                            text60       000000
__ptext7                             text7        00197C
__ptext8                             text8        001992
__ptext9                             text9        000ECE
__ramtop                             ramtop       000300
__size_of_CanRCVResponse             (abs)        000000
__size_of_CanXmitResponse            (abs)        000000
__size_of_Check4Keystroke            (abs)        000000
__size_of_DotStar_Init               (abs)        000000
__size_of_DotStar_Off                (abs)        000000
__size_of_DotStar_Show               (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_StopTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_GetNextFrame               (abs)        000000
__size_of_HW_Init                    (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitCanHardware            (abs)        000000
__size_of_InitCan_XmitService        (abs)        000000
__size_of_InitPatternControlService  (abs)        000000
__size_of_InitSPI32ControlService    (abs)        000000
__size_of_InitToggleService          (abs)        000000
__size_of_PausePattern               (abs)        000000
__size_of_PostPatternControlService  (abs)        000000
__size_of_PostSPI32ControlService    (abs)        000000
__size_of_PostToggleService          (abs)        000000
__size_of_ResetPattern               (abs)        000000
__size_of_RunCan_XmitService         (abs)        000000
__size_of_RunPatternControlService   (abs)        000000
__size_of_RunSPI32ControlService     (abs)        000000
__size_of_RunToggleService           (abs)        000000
__size_of_SPI32_EOTResponse          (abs)        000000
__size_of_SPI32_Init                 (abs)        000000
__size_of_SPI32_SendByte             (abs)        000000
__size_of_SPI32_TransmitFrames       (abs)        000000
__size_of_SetupPattern               (abs)        000000
__size_of_ShowPattern                (abs)        000000
__size_of_StopPattern                (abs)        000000
__size_of_UpdatePattern              (abs)        000000
__size_of_XmitData                   (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___llmod                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_memcpy                     (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__size_ofi2_ES_EnQueueFIFO           (abs)        000000
__size_ofi2_ES_PostToService         (abs)        000000
__size_ofi2_ES_Timer_InitTimer       (abs)        000000
__size_ofi2_PostSPI32ControlService  (abs)        000000
__size_ofi2___awmod                  (abs)        000000
__size_ofi2___wmul                   (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        00113E
_memcpy                              text24       001514
_printf                              text1        001790
_putch                               text2        001A38
btemp                                temp         000056
end_of_initialization                cinit        001130
i2ES_EnQueueFIFO@Event2Add           cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit            cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock              cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue          cstackCOMRAM 000016
i2ES_PostToService@TheEvent          cstackCOMRAM 000018
i2ES_PostToService@WhichService      cstackCOMRAM 00001D
i2ES_Timer_InitTimer@NewTime         cstackCOMRAM 000001
i2ES_Timer_InitTimer@Num             cstackCOMRAM 000005
i2PostSPI32ControlService@ThisEvent  cstackCOMRAM 00001E
i2_ES_EnQueueFIFO                    text54       000E1A
i2_ES_PostToService                  text53       0013A2
i2_ES_Timer_InitTimer                text58       001334
i2_PostSPI32ControlService           text52       0019BE
i2___awmod                           text56       0012C4
i2___awmod@counter                   cstackCOMRAM 000005
i2___awmod@dividend                  cstackCOMRAM 000001
i2___awmod@divisor                   cstackCOMRAM 000003
i2___awmod@sign                      cstackCOMRAM 000006
i2___wmul                            text55       001874
i2___wmul@multiplicand               cstackCOMRAM 000009
i2___wmul@multiplier                 cstackCOMRAM 000007
i2___wmul@product                    cstackCOMRAM 00000B
int$flags                            temp         000056
int_func                             intcode_body 000D60
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  0000F7
memcpy@d                             cstackBANK0  0000C3
memcpy@d1                            cstackBANK0  0000BD
memcpy@n                             cstackBANK0  0000C1
memcpy@s                             cstackBANK0  0000C5
memcpy@s1                            cstackBANK0  0000BF
printf@ap                            cstackBANK0  0000BF
printf@c                             cstackBANK0  0000C1
printf@f                             cstackBANK0  0000BD
stackhi                              (abs)        0001FF
stacklo                              (abs)        0001B4
start                                init         000016
start_initialization                 cinit        0010AE


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   58[BANK0 ] enum E15647
 Return value:  Size  Location     Type
                  2  551[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   15
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   57[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15495
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   14
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunCan_XmitService
		_RunPatternControlService
		_RunSPI32ControlService
		_RunToggleService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 218 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostPatternControlService
		_PostSPI32ControlService
		_PostToggleService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_SPI32_TransmitFrames
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _PostPatternControlService *****************
 Defined at:
		line 135 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_RunPatternControlService
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _PostToggleService *****************
 Defined at:
		line 108 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunCan_XmitService *****************
 Defined at:
		line 133 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   40[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   43[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   40[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_InitCanHardware
		_XmitData
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunSPI32ControlService *****************
 Defined at:
		line 138 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   40[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   50[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   40[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       7       0       0
      Totals:         0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_GetNextFrame
		_SPI32_SendByte
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunPatternControlService *****************
 Defined at:
		line 157 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   40[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  testEvent       3   46[BANK0 ] struct ES_Event_t
  ReturnEvent     3   43[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   40[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_PausePattern
		_PostPatternControlService
		_ShowPattern
		_StopPattern
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunToggleService *****************
 Defined at:
		line 130 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   40[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   43[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   40[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_XmitData
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _SPI32_SendByte *****************
 Defined at:
		line 84 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newByte         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  newByte         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _GetNextFrame *****************
 Defined at:
		line 249 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		fsr2l, fsr2h
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _StopPattern *****************
 Defined at:
		line 280 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_DotStar_Off
		_ES_Timer_StopTimer
		_ResetPattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ResetPattern *****************
 Defined at:
		line 121 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _DotStar_Off *****************
 Defined at:
		line 73 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_SPI32_TransmitFrames
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _ShowPattern *****************
 Defined at:
		line 270 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_DotStar_Show
		_ES_Timer_InitTimer
		_UpdatePattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _UpdatePattern *****************
 Defined at:
		line 76 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   21[BANK0 ] unsigned char 
  patternID       1   20[BANK0 ] unsigned char 
  brightness      1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    9[BANK0 ] PTR unsigned long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       7       0       0
      Temps:          0       4       0       0
      Totals:         0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awmod
		___llmod
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function ___llmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/llmod.c"
 Parameters:    Size  Location     Type
  dividend        4    0[BANK0 ] unsigned long 
  divisor         4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       8       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15473
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _DotStar_Show *****************
 Defined at:
		line 66 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  pixelPointer    2   38[BANK0 ] PTR unsigned long 
		 -> PixelPattern(120), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_SPI32_TransmitFrames
		_memcpy
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 11 in file "/Applications/microchip/xc8/v1.38/sources/common/memcpy.c"
 Parameters:    Size  Location     Type
  d1              2    0[BANK0 ] PTR void 
		 -> PixelFrames(128), 
  s1              2    2[BANK0 ] PTR const void 
		 -> PixelPattern(120), 
  n               2    4[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  s               2    8[BANK0 ] PTR const unsigned char 
		 -> PixelPattern(120), 
  d               2    6[BANK0 ] PTR unsigned char 
		 -> PixelFrames(128), 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] PTR void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       6       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function _SPI32_TransmitFrames *****************
 Defined at:
		line 230 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  framePointer    2   32[BANK0 ] PTR unsigned long 
		 -> OffFrames(128), PixelFrames(128), 
  numFrames       1   34[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  transmitEven    3   35[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_PostSPI32ControlService
 This function is called by:
		_DotStar_Show
		_DotStar_Off
 This function uses a non-reentrant model


 *************** function _PausePattern *****************
 Defined at:
		line 293 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_Timer_StopTimer
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_Timer_StopTimer *****************
 Defined at:
		line 205 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15473
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
		_PausePattern
 This function uses a non-reentrant model


 *************** function _XmitData *****************
 Defined at:
		line 145 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  DataByte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  DataByte        1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunToggleService
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _InitCanHardware *****************
 Defined at:
		line 173 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_Check4Keystroke
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 62 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15424
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15495
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitCan_XmitService
		_InitPatternControlService
		_InitSPI32ControlService
		_InitToggleService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitCan_XmitService *****************
 Defined at:
		line 76 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitSPI32ControlService *****************
 Defined at:
		line 80 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
		_SPI32_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitPatternControlService *****************
 Defined at:
		line 97 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_DotStar_Init
		_ES_PostToService
		_SetupPattern
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitToggleService *****************
 Defined at:
		line 63 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _SPI32_Init *****************
 Defined at:
		line 64 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_HW_Init
 This function is called by:
		_InitSPI32ControlService
 This function uses a non-reentrant model


 *************** function _HW_Init *****************
 Defined at:
		line 117 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_SPI32_Init
 This function uses a non-reentrant model


 *************** function _SetupPattern *****************
 Defined at:
		line 69 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  configs         2    0[BANK0 ] PTR unsigned char 
		 -> PatternConfigs(5), 
  numPixels       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _DotStar_Init *****************
 Defined at:
		line 41 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  numPixels       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  numPixels       1    2[BANK0 ] unsigned char 
  i               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitPatternControlService
		_PostPatternControlService
		_InitSPI32ControlService
		_PostSPI32ControlService
		_InitToggleService
		_PostToggleService
		_InitCan_XmitService
		_PostCan_TransmitService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_UpdatePattern
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15424
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 72 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 112 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_CanRCVResponse
		_CanXmitResponse
		_SPI32_EOTResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _SPI32_EOTResponse *****************
 Defined at:
		line 156 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  EOTevent        3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i2_PostSPI32ControlService
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		i2_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue3(12), Queue2(12), Queue1(12), Queue0(12), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _CanXmitResponse *****************
 Defined at:
		line 157 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_ES_Timer_InitTimer
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15473
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_CanXmitResponse
 This function uses a non-reentrant model


 *************** function _CanRCVResponse *****************
 Defined at:
		line 164 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	0BBA	0000	227
		_ES_DeQueue    		CODE           	06AC	0000	297
		_ES_InitQueue  		CODE           	16B0	0000	61

ES_Queue.c estimated size: 585

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	155E	0000	75

ES_CheckEvents.c estimated size: 75

Pattern_DotStarLED.c
		_DotStar_Off   		CODE           	1914	0000	29
		_DotStar_Init  		CODE           	09DE	0000	241
		_DotStar_Show  		CODE           	1630	0000	67

Pattern_DotStarLED.c estimated size: 337

Pattern_RGBPatterns.c
		_ResetPattern  		CODE           	1A10	0000	9
		_SetupPattern  		CODE           	19EA	0000	15
		_UpdatePattern 		CODE           	03CC	0000	415

Pattern_RGBPatterns.c estimated size: 439

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c
		___lbmod       		CODE           	15A8	0000	69

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c estimated size: 69

/Applications/microchip/xc8/v1.38/sources/common/memcpy.c
		_memcpy        		CODE           	1514	0000	75

/Applications/microchip/xc8/v1.38/sources/common/memcpy.c estimated size: 75

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	0ECE	0000	165

ES_LookupTables.c estimated size: 165

SPI32_ControlService.c
		_PostSPI32ControlService		CODE           	18DC	0000	29
		_GetNextFrame  		CODE           	194C	0000	27
		_InitSPI32ControlService		CODE           	16EC	0000	59
		_RunSPI32ControlService		CODE           	056A	0000	323
		_SPI32_TransmitFrames		CODE           	17C4	0000	51

SPI32_ControlService.c estimated size: 489

EventCheckers.c
		_Check4Keystroke		CODE           	1A34	0000	5

EventCheckers.c estimated size: 5

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c
		___wmul        		CODE           	1726	0000	55

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c estimated size: 55

Can_XmitService.c
		_InitCan_XmitService		CODE           	17F6	0000	49
		_RunCan_XmitService		CODE           	1826	0000	41
		_CanXmitResponse		CODE           	19D4	0000	23
		_CanRCVResponse		CODE           	1A20	0000	9
		_XmitData      		CODE           	18BC	0000	33
		_InitCanHardware		CODE           	140C	0000	105

Can_XmitService.c estimated size: 260

ES_Framework.c
		_ES_PostToService		CODE           	124E	0000	119
		_ES_Run        		CODE           	08EA	0000	245
		_ES_Initialize 		CODE           	0ACE	0000	237

ES_Framework.c estimated size: 601

ToggleService.c
		_InitToggleService		CODE           	15EC	0000	69
		_RunToggleService		CODE           	1672	0000	63
		_PostToggleService		CODE           	1992	0000	23

ToggleService.c estimated size: 155

SPI32_HW.c
		_SPI32_EOTResponse		CODE           	19A8	0000	23
		_SPI32_Init    		CODE           	1A28	0000	7
		_SPI32_SendByte		CODE           	1A06	0000	11
		_HW_Init       		CODE           	189A	0000	35

SPI32_HW.c estimated size: 76

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	036E	0000	5
		i2_ES_EnQueueFIFO		CODE           	0E1A	0000	181
		_ES_EventList  		SMALLCONST     	036C	0000	3
		i2___wmul      		CODE           	1874	0000	39
		i2_ES_PostToService		CODE           	13A2	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0351	0000	16
		_EventQueues   		SMALLCONST     	0360	0000	13
		__initialization		CODE           	10AE	0000	131
		i2___awmod     		CODE           	12C4	0000	113
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0341	0000	17
		i2_PostSPI32ControlService		CODE           	19BE	0000	23
		i2_ES_Timer_InitTimer		CODE           	1334	0000	111

shared estimated size: 825

Pattern_ControlService.c
		_InitPatternControlService		CODE           	1474	0000	83
		_ShowPattern   		CODE           	184E	0000	39
		_RunPatternControlService		CODE           	0C9C	0000	197
		_PostPatternControlService		CODE           	197C	0000	23
		_PausePattern  		CODE           	1A18	0000	9
		_StopPattern   		CODE           	18F8	0000	29

Pattern_ControlService.c estimated size: 380

ES_Port.c
		_ISR           		CODE           	0008	0000	201
		__HW_Process_Pending_Ints		CODE           	1966	0000	23
		__HW_Timer_Init		CODE           	1930	0000	29

ES_Port.c estimated size: 253

/Applications/microchip/xc8/v1.38/sources/common/awmod.c
		___awmod       		CODE           	0F72	0000	163

/Applications/microchip/xc8/v1.38/sources/common/awmod.c estimated size: 163

/Applications/microchip/xc8/v1.38/sources/common/putch.c
		_putch         		CODE           	1A38	0000	3

/Applications/microchip/xc8/v1.38/sources/common/putch.c estimated size: 3

/Applications/microchip/xc8/v1.38/sources/common/llmod.c
		___llmod       		CODE           	1014	0000	155

/Applications/microchip/xc8/v1.38/sources/common/llmod.c estimated size: 155

ES_Timers.c
		_ES_Timer_Init 		CODE           	19F8	0000	15
		_ES_Timer_InitTimer		CODE           	11CE	0000	129
		_ES_Timer_StopTimer		CODE           	14C6	0000	79
		_ES_Timer_Tick_Resp		CODE           	07D4	0000	279

ES_Timers.c estimated size: 502

main.c
		_main          		CODE           	113E	0000	145

main.c estimated size: 145

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c
		_printf        		CODE           	1790	0000	53

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c estimated size: 53

